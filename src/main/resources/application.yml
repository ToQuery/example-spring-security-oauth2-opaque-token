logging:
  level:
    org:
      springframework:
        security: trace


spring:
  lifecycle:
    timeout-per-shutdown-phase: 30s
  output:
    ansi:
      enabled: always
  profiles:
    active: local
  application:
    name: example-spring-security-oauth2-sso-opaque-token
  security:
    oauth2:
      client:
        registration:
#          github:
#            clientId: xxx
#            clientSecret: xxx
#            redirectUri: "{baseUrl}/login/oauth2/code/{registrationId}"
#            scope:
#              - user:email
#              - read:user
          toquery:
            provider: toquery
            client-name: example-spring-security-oauth2-sso-opaque-token
            client-id: example-spring-security-oauth2-sso-opaque-token
            client-secret: example-spring-security-oauth2-sso-opaque-token-secret
            client-authentication-method: basic
            authorization-grant-type: authorization_code
            # 本地开发环境需要指定uri，其他环境自动配置 {baseUrl}/login/oauth2/code/{registrationId}
            redirect-uri: '{baseUrl}/login/oauth2/code/{registrationId}'
            scope:
              - read
              - write
              - openid
              - profile
              - email
              - address
              - phone
        provider:
          toquery:
            authorization-uri: ${app.oauth2.domain}/oauth2/authorize
            token-uri: ${app.oauth2.domain}/oauth2/token
            user-info-uri: ${app.oauth2.domain}/userinfo
            user-name-attribute: sub
            jwk-set-uri: ${app.oauth2.domain}/oauth2/jwks
      resourceserver:
        opaquetoken:
          client-id: example-spring-security-oauth2-sso-opaque-token
          client-secret: example-spring-security-oauth2-sso-opaque-token-secret
          introspection-uri: ${app.oauth2.domain}

app:
  oauth2:
    domain: http://localhost:8080/
